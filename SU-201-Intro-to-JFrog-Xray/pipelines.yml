resources:
  - name: git_repo 
    type: GitRepo
    configuration:
      # SCM integration where the repository is located
      gitProvider: GitHub
      # Repository path, including org name/repo name
      path: MaharshiPatel/SwampUp2021                     # Update with your "git_user"/SwampUp2021
      branches:
        # Specifies which branches will trigger dependent steps
        include: main

  - name: npm_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: Artifactory
      buildName:  'npm_example_pipeline'
      buildNumber: $run_number
      externalCI: Artifactory

  - name: npm_promoted_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: Artifactory
      buildName:  'npm_example_pipeline'
      buildNumber: $run_number
      externalCI: Artifactory

  - name: npm_qa_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: Artifactory
      buildName:  'npm_example_pipeline'
      buildNumber: $run_number
      externalCI: Artifactory
  
  - name: mvn_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: Artifactory
      buildName:  'mvn_example_pipeline'
      buildNumber: $run_number
      externalCI: Artifactory

pipelines:
  - name: npm_example_pipeline
    configuration:
      environmentVariables:
        readOnly:
           my_env_var: '1.0.$run_number'
    steps:
      - name: npm_build_step
        type: NpmBuild
        configuration:
          repositoryName: su201-npm                                      # required, npm repository name on artifacctory
          sourceLocation: ./SU-201-Intro-to-JFrog-Xray/npm-example/      # required, location of package.json file
          integrations:
            - name:  Artifactory  # required 
          inputResources:
            - name: git_repo   # required
        execution:
          onSuccess:
            - cd $res_src_resourcePath

      - name: npm_publish_step
        type: NpmPublish
        configuration:
          requiresApproval:
            timeoutSeconds: 43200 # if not approved in this timeframe, the step will be cancelled
            approvers:
              - maharship
            notifications:
              - integrationName: slack
          repositoryName: su201-npm        # required, npm repository name on artifactory
          autoPublishBuildInfo: true       # optional
          forceXrayScan: true              # optional 
          failOnScan: false                 # default true
          integrations:
            - name: Artifactory            # required
          inputSteps:
            - name: npm_build_step         # required
          outputResources:
            - name: npm_build_info         # optional

      - name: npm_test_step
        type: Bash
        configuration:
          inputResources:
            - name: npm_build_info   # required
          outputResources:
            - name: npm_qa_build_info
        execution:
          onExecute:
            - cd $res_src_resourcePath
            - mkdir -p testresults && mkdir -p codecoverage
            - pwd
            - ls
            - save_tests $res_src_resourcePath/testresults/testresults.xml
          onSuccess:
            - send_notification slack "Build is ready for QA Team"

      - name: promote_to_qa
        type: PromoteBuild
        configuration:
          requiresApproval:
              timeoutSeconds: 43200 # if not approved in this timeframe, the step will be cancelled
              approvers:
                - qateam
          targetRepository: su201-npm-qa-local
          includeDependencies: false    # default false
          status: 'QA' 
          comment: 'Promote to QA'
          copy: true
          inputResources:
            - name: npm_build_info
          outputResources:
            - name: npm_promoted_build_info

  - name: mvn_example_pipeline
    steps:
      - name: mvn_build_step
        type: MvnBuild
        configuration:
          deployerSnapshotRepo: su201-libs-snapshot
          deployerReleaseRepo:  su201-libs-release
          sourceLocation: ./SU-201-Intro-to-JFrog-Xray/maven-example/
          mvnCommand: clean install -ntp
          inputResources:
            - name: git_repo
          integrations:
            - name: Artifactory
      
      - name: publish_build
        type: PublishBuildInfo
        configuration:
          forceXrayScan: true              # optional  
          failOnScan: false                 # default true
          inputSteps:
            - name: mvn_build_step
          outputResources:
            - name: mvn_build_info
